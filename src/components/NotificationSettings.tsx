import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Bell, BellOff, CheckCircle, XCircle } from "lucide-react";
import { useNotifications } from "@/contexts/NotificationContext";
import { useLanguage } from "@/contexts/LanguageContext";

const NotificationSettings: React.FC = () => {
  const { permission, isSupported, requestPermission, isSubscribed, subscribe, unsubscribe, sendNotification } = useNotifications();
  const { language } = useLanguage();
  const [loading, setLoading] = useState(false);

  const handleToggleNotifications = async () => {
    setLoading(true);
    try {
      if (isSubscribed) {
        await unsubscribe();
      } else {
        if (permission === 'default') {
          await requestPermission();
        }
        if (permission === 'granted' || Notification.permission === 'granted') {
          await subscribe();
        }
      }
    } catch (error) {
      console.error('Error toggling notifications:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleTestNotification = () => {
    sendNotification(
      language === 'en' ? 'Test Notification üì¨' : '‡≤™‡≤∞‡≥Ä‡≤ï‡≥ç‡≤∑‡≤æ ‡≤Ö‡≤ß‡≤ø‡≤∏‡≥Ç‡≤ö‡≤®‡≥Ü üì¨',
      {
        body: language === 'en' 
          ? 'This is how you will receive updates about your applications!'
          : '‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤Ö‡≤∞‡≥ç‡≤ú‡≤ø‡≤ó‡≤≥ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤®‡≥Ä‡≤µ‡≥Å ‡≤®‡≤µ‡≥Ä‡≤ï‡≤∞‡≤£‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤π‡≥Ä‡≤ó‡≥Ü ‡≤∏‡≥ç‡≤µ‡≥Ä‡≤ï‡≤∞‡≤ø‡≤∏‡≥Å‡≤§‡≥ç‡≤§‡≥Ä‡≤∞‡≤ø!'
      }
    );
  };

  if (!isSupported) {
    return (
      <Card className="border-yellow-200 bg-yellow-50">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Bell className="h-5 w-5" />
            {language === 'en' ? 'Notifications Not Supported' : '‡≤Ö‡≤ß‡≤ø‡≤∏‡≥Ç‡≤ö‡≤®‡≥Ü‡≤ó‡≤≥‡≥Å ‡≤¨‡≥Ü‡≤Ç‡≤¨‡≤≤‡≤ø‡≤§‡≤µ‡≤æ‡≤ó‡≤ø‡≤≤‡≥ç‡≤≤'}
          </CardTitle>
          <CardDescription>
            {language === 'en' 
              ? 'Your browser does not support push notifications'
              : '‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤¨‡≥ç‡≤∞‡≥å‡≤∏‡≤∞‡≥ç ‡≤™‡≥Å‡≤∂‡≥ç ‡≤Ö‡≤ß‡≤ø‡≤∏‡≥Ç‡≤ö‡≤®‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≥Ü‡≤Ç‡≤¨‡≤≤‡≤ø‡≤∏‡≥Å‡≤µ‡≥Å‡≤¶‡≤ø‡≤≤‡≥ç‡≤≤'
            }
          </CardDescription>
        </CardHeader>
      </Card>
    );
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center justify-between">
          <div className="flex items-center gap-2">
            <Bell className="h-5 w-5" />
            {language === 'en' ? 'Push Notifications' : '‡≤™‡≥Å‡≤∂‡≥ç ‡≤Ö‡≤ß‡≤ø‡≤∏‡≥Ç‡≤ö‡≤®‡≥Ü‡≤ó‡≤≥‡≥Å'}
          </div>
          <Badge variant={isSubscribed ? 'default' : 'secondary'}>
            {isSubscribed 
              ? (language === 'en' ? 'Active' : '‡≤∏‡≤ï‡≥ç‡≤∞‡≤ø‡≤Ø') 
              : (language === 'en' ? 'Inactive' : '‡≤®‡≤ø‡≤∑‡≥ç‡≤ï‡≥ç‡≤∞‡≤ø‡≤Ø')
            }
          </Badge>
        </CardTitle>
        <CardDescription>
          {language === 'en' 
            ? 'Get real-time updates about your applications'
            : '‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤Ö‡≤∞‡≥ç‡≤ú‡≤ø‡≤ó‡≤≥ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤®‡≥à‡≤ú-‡≤∏‡≤Æ‡≤Ø‡≤¶ ‡≤®‡≤µ‡≥Ä‡≤ï‡≤∞‡≤£‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤™‡≤°‡≥Ü‡≤Ø‡≤ø‡≤∞‡≤ø'
          }
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        {/* Permission Status */}
        <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
          <div className="flex items-center gap-2">
            {permission === 'granted' ? (
              <CheckCircle className="h-5 w-5 text-green-600" />
            ) : permission === 'denied' ? (
              <XCircle className="h-5 w-5 text-red-600" />
            ) : (
              <Bell className="h-5 w-5 text-gray-400" />
            )}
            <span className="font-medium">
              {language === 'en' ? 'Permission Status' : '‡≤Ö‡≤®‡≥Å‡≤Æ‡≤§‡≤ø ‡≤∏‡≥ç‡≤•‡≤ø‡≤§‡≤ø'}
            </span>
          </div>
          <Badge variant={permission === 'granted' ? 'default' : permission === 'denied' ? 'destructive' : 'secondary'}>
            {permission === 'granted' ? (language === 'en' ? 'Granted' : '‡≤Ö‡≤®‡≥Å‡≤Æ‡≤§‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü') :
             permission === 'denied' ? (language === 'en' ? 'Denied' : '‡≤®‡≤ø‡≤∞‡≤æ‡≤ï‡≤∞‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü') :
             (language === 'en' ? 'Not Asked' : '‡≤ï‡≥á‡≤≥‡≤≤‡≤æ‡≤ó‡≤ø‡≤≤‡≥ç‡≤≤')}
          </Badge>
        </div>

        {/* Notification Types */}
        <div className="space-y-2">
          <h4 className="font-medium text-sm text-gray-700">
            {language === 'en' ? 'You will receive notifications for:' : '‡≤®‡≥Ä‡≤µ‡≥Å ‡≤Ö‡≤ß‡≤ø‡≤∏‡≥Ç‡≤ö‡≤®‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤∏‡≥ç‡≤µ‡≥Ä‡≤ï‡≤∞‡≤ø‡≤∏‡≥Å‡≤§‡≥ç‡≤§‡≥Ä‡≤∞‡≤ø:'}
          </h4>
          <ul className="space-y-1 text-sm text-gray-600">
            <li className="flex items-center gap-2">
              <CheckCircle className="h-4 w-4 text-green-600" />
              {language === 'en' ? 'Application status updates' : '‡≤Ö‡≤∞‡≥ç‡≤ú‡≤ø ‡≤∏‡≥ç‡≤•‡≤ø‡≤§‡≤ø ‡≤®‡≤µ‡≥Ä‡≤ï‡≤∞‡≤£‡≤ó‡≤≥‡≥Å'}
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="h-4 w-4 text-green-600" />
              {language === 'en' ? 'Document verification alerts' : '‡≤¶‡≤æ‡≤ñ‡≤≤‡≥Ü ‡≤™‡≤∞‡≤ø‡≤∂‡≥Ä‡≤≤‡≤®‡≥Ü ‡≤é‡≤ö‡≥ç‡≤ö‡≤∞‡≤ø‡≤ï‡≥Ü‡≤ó‡≤≥‡≥Å'}
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="h-4 w-4 text-green-600" />
              {language === 'en' ? 'Payment confirmations' : '‡≤™‡≤æ‡≤µ‡≤§‡≤ø ‡≤¶‡≥É‡≤¢‡≥Ä‡≤ï‡≤∞‡≤£‡≤ó‡≤≥‡≥Å'}
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="h-4 w-4 text-green-600" />
              {language === 'en' ? 'Appointment reminders' : '‡≤®‡≥á‡≤Æ‡≤ï‡≤æ‡≤§‡≤ø ‡≤ú‡≥ç‡≤û‡≤æ‡≤™‡≤®‡≥Ü‡≤ó‡≤≥‡≥Å'}
            </li>
          </ul>
        </div>

        {/* Action Buttons */}
        <div className="flex gap-2">
          <Button
            onClick={handleToggleNotifications}
            disabled={loading || permission === 'denied'}
            className="flex-1"
            variant={isSubscribed ? 'destructive' : 'default'}
          >
            {isSubscribed ? (
              <>
                <BellOff className="h-4 w-4 mr-2" />
                {language === 'en' ? 'Disable' : '‡≤®‡≤ø‡≤∑‡≥ç‡≤ï‡≥ç‡≤∞‡≤ø‡≤Ø‡≤ó‡≥ä‡≤≥‡≤ø‡≤∏‡≤ø'}
              </>
            ) : (
              <>
                <Bell className="h-4 w-4 mr-2" />
                {language === 'en' ? 'Enable' : '‡≤∏‡≤ï‡≥ç‡≤∞‡≤ø‡≤Ø‡≤ó‡≥ä‡≤≥‡≤ø‡≤∏‡≤ø'}
              </>
            )}
          </Button>
          
          {isSubscribed && (
            <Button
              onClick={handleTestNotification}
              variant="outline"
            >
              {language === 'en' ? 'Test' : '‡≤™‡≤∞‡≥Ä‡≤ï‡≥ç‡≤∑‡≥Ü'}
            </Button>
          )}
        </div>

        {permission === 'denied' && (
          <div className="p-3 bg-red-50 border border-red-200 rounded-lg text-sm text-red-800">
            {language === 'en' 
              ? 'Notifications are blocked. Please enable them in your browser settings.'
              : '‡≤Ö‡≤ß‡≤ø‡≤∏‡≥Ç‡≤ö‡≤®‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤®‡≤ø‡≤∞‡≥ç‡≤¨‡≤Ç‡≤ß‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü. ‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤¨‡≥ç‡≤∞‡≥å‡≤∏‡≤∞‡≥ç ‡≤∏‡≥Ü‡≤ü‡≥ç‡≤ü‡≤ø‡≤Ç‡≤ó‡≥ç‚Äå‡≤ó‡≤≥‡≤≤‡≥ç‡≤≤‡≤ø ‡≤Ö‡≤µ‡≥Å‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤∏‡≤ï‡≥ç‡≤∞‡≤ø‡≤Ø‡≤ó‡≥ä‡≤≥‡≤ø‡≤∏‡≤ø.'
            }
          </div>
        )}
      </CardContent>
    </Card>
  );
};

export default NotificationSettings;
